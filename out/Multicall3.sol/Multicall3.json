{"abi":[{"type":"function","name":"aggregate","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"returnData","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"payable"},{"type":"function","name":"aggregate3","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call3[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"allowFailure","type":"bool","internalType":"bool"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"aggregate3Value","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call3Value[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"allowFailure","type":"bool","internalType":"bool"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"blockAndAggregate","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"getBasefee","inputs":[],"outputs":[{"name":"basefee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockHash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getChainId","inputs":[],"outputs":[{"name":"chainid","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockCoinbase","inputs":[],"outputs":[{"name":"coinbase","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockDifficulty","inputs":[],"outputs":[{"name":"difficulty","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockGasLimit","inputs":[],"outputs":[{"name":"gaslimit","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getEthBalance","inputs":[{"name":"addr","type":"address","internalType":"address"}],"outputs":[{"name":"balance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastBlockHash","inputs":[],"outputs":[{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"tryAggregate","inputs":[{"name":"requireSuccess","type":"bool","internalType":"bool"},{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"},{"type":"function","name":"tryBlockAndAggregate","inputs":[{"name":"requireSuccess","type":"bool","internalType":"bool"},{"name":"calls","type":"tuple[]","internalType":"struct Multicall3.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"callData","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"returnData","type":"tuple[]","internalType":"struct Multicall3.Result[]","components":[{"name":"success","type":"bool","internalType":"bool"},{"name":"returnData","type":"bytes","internalType":"bytes"}]}],"stateMutability":"payable"}],"bytecode":{"object":"0x60808060405234601557610aca908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630f28c97d14610117578063174dea7114610112578063252dba421461010d57806327e86d6e146101085780633408e47014610103578063399542e9146100fe5780633e64a696146100f957806342cbb15c146100f45780634d2301cc146100ef57806372425d9d146100ea57806382ad56cb146100e557806386d516e8146100e0578063a8b0574e146100db578063bce38bd7146100d6578063c3077fa9146100d15763ee82ac5e146100cc57600080fd5b610775565b6106db565b6106b8565b61069d565b610682565b6105b8565b61059d565b610575565b610549565b61052e565b61050a565b61049a565b61047a565b6103b9565b61025b565b34610132576000366003190112610132576020604051428152f35b600080fd5b9181601f840112156101325782359167ffffffffffffffff8311610132576020808501948460051b01011161013257565b6020600319820112610132576004359067ffffffffffffffff82116101325761019391600401610137565b9091565b919082519283825260005b8481106101c3575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016101a2565b908082519081815260208091019281808460051b8301019501936000915b8483106102055750505050505090565b9091929394958480610237600193601f198682030187528a518360409180511515845201519181858201520190610197565b98019301930191949392906101f5565b9060206102589281815201906101d7565b90565b61026436610168565b600061026f826107ec565b9160005b8181106102995761029584610289853414610928565b60405191829182610247565b0390f35b6102a38185610866565b516102af82848861087f565b60008060406102e381850135809901986102c8866108a1565b926102d660608801886108ab565b93909151809481936108de565b03925af1916102f06108ec565b90610305602094859384840152829015159052565b5191013517156103185750600101610273565b62461bcd60e51b600052600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260846000fd5b906040820190825260206040602084015283518092526060830192602060608460051b8301019501936000915b84831061038b5750505050505090565b90919293949584806103a9600193605f198682030187528a51610197565b980193019301919493929061037b565b6103c236610168565b906103d46103cf836107d4565b6107a9565b82815291601f196103e4826107d4565b0160005b81811061046957505060005b81811061040a576040518061029586438361034e565b8061046360008061041e6001958789610974565b8161043661042b836108a1565b9260208101906108ab565b9190610447604051809481936108de565b03925af16104536108ec565b61045d8489610866565b52610996565b016103f4565b8060606020809388010152016103e8565b346101325760003660031901126101325760206040516000194301408152f35b34610132576000366003190112610132576020604051468152f35b90604060031983011261013257600435801515810361013257916024359067ffffffffffffffff82116101325761019391600401610137565b61025893926060928252602082015281604082015201906101d7565b61029561051f610519366104b5565b916109fe565b604051918291434043846104ee565b34610132576000366003190112610132576020604051488152f35b34610132576000366003190112610132576020604051438152f35b6001600160a01b0381160361013257565b3461013257602036600319011261013257602060043561059481610564565b31604051908152f35b34610132576000366003190112610132576020604051448152f35b6105c136610168565b6105ca816107ec565b9060005b8181106105e357604051806102958582610247565b6105ed8184610866565b516105f98284876109dc565b600080610605836108a1565b6106178260406102d6818801886108ab565b03925af1916106246108ec565b90610639602094859384840152829015159052565b51910135171561064c57506001016105ce565b62461bcd60e51b600052600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260646000fd5b34610132576000366003190112610132576020604051458152f35b34610132576000366003190112610132576020604051418152f35b6102956106c7610519366104b5565b6040519182916020835260208301906101d7565b6106e436610168565b6106ed816107ec565b9160005b82811061070a57604051806102958643804090846104ee565b8061076f61071a60019387610866565b51610726838787610974565b600080823561073481610564565b81610744602095868101906108ab565b9190826040519384928337810182815203925af1906107616108ec565b908301521515809152610996565b016106f1565b34610132576020366003190112610132576020604051600435408152f35b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176107cf57604052565b610793565b67ffffffffffffffff81116107cf5760051b60200190565b906107f96103cf836107d4565b828152809261080a601f19916107d4565b016000805b82811061081c5750505050565b604090815182810181811067ffffffffffffffff8211176107cf57602093528381528260608183015282870101520161080f565b634e487b7160e01b600052603260045260246000fd5b805182101561087a5760209160051b010190565b610850565b919081101561087a5760051b81013590607e1981360301821215610132570190565b3561025881610564565b903590601e1981360301821215610132570180359067ffffffffffffffff82116101325760200191813603831361013257565b908092918237016000815290565b3d15610923573d9067ffffffffffffffff82116107cf57610916601f8301601f19166020016107a9565b9182523d6000602084013e565b606090565b1561092f57565b60405162461bcd60e51b815260206004820152601a60248201527f4d756c746963616c6c333a2076616c7565206d69736d617463680000000000006044820152606490fd5b919081101561087a5760051b81013590603e1981360301821215610132570190565b1561099d57565b60405162461bcd60e51b8152602060048201526017602482015276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b6044820152606490fd5b919081101561087a5760051b81013590605e1981360301821215610132570190565b929190610a0a826107ec565b9360005b838110610a1b5750505050565b80610a2860019288610866565b5183610a35838888610974565b6000808235610a4381610564565b81610a53602095868101906108ab565b9190826040519384928337810182815203925af190610a706108ec565b908401521515809252610a85575b5001610a0e565b610a8e90610996565b38610a7e56fea2646970667358221220be5c55bb3a6f11b9f0691785c17c8976b7420d395bda370d31659d00d11777ee64736f6c63430008190033","sourceMap":"515:9310:86:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436101561001257600080fd5b60003560e01c80630f28c97d14610117578063174dea7114610112578063252dba421461010d57806327e86d6e146101085780633408e47014610103578063399542e9146100fe5780633e64a696146100f957806342cbb15c146100f45780634d2301cc146100ef57806372425d9d146100ea57806382ad56cb146100e557806386d516e8146100e0578063a8b0574e146100db578063bce38bd7146100d6578063c3077fa9146100d15763ee82ac5e146100cc57600080fd5b610775565b6106db565b6106b8565b61069d565b610682565b6105b8565b61059d565b610575565b610549565b61052e565b61050a565b61049a565b61047a565b6103b9565b61025b565b34610132576000366003190112610132576020604051428152f35b600080fd5b9181601f840112156101325782359167ffffffffffffffff8311610132576020808501948460051b01011161013257565b6020600319820112610132576004359067ffffffffffffffff82116101325761019391600401610137565b9091565b919082519283825260005b8481106101c3575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016101a2565b908082519081815260208091019281808460051b8301019501936000915b8483106102055750505050505090565b9091929394958480610237600193601f198682030187528a518360409180511515845201519181858201520190610197565b98019301930191949392906101f5565b9060206102589281815201906101d7565b90565b61026436610168565b600061026f826107ec565b9160005b8181106102995761029584610289853414610928565b60405191829182610247565b0390f35b6102a38185610866565b516102af82848861087f565b60008060406102e381850135809901986102c8866108a1565b926102d660608801886108ab565b93909151809481936108de565b03925af1916102f06108ec565b90610305602094859384840152829015159052565b5191013517156103185750600101610273565b62461bcd60e51b600052600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260846000fd5b906040820190825260206040602084015283518092526060830192602060608460051b8301019501936000915b84831061038b5750505050505090565b90919293949584806103a9600193605f198682030187528a51610197565b980193019301919493929061037b565b6103c236610168565b906103d46103cf836107d4565b6107a9565b82815291601f196103e4826107d4565b0160005b81811061046957505060005b81811061040a576040518061029586438361034e565b8061046360008061041e6001958789610974565b8161043661042b836108a1565b9260208101906108ab565b9190610447604051809481936108de565b03925af16104536108ec565b61045d8489610866565b52610996565b016103f4565b8060606020809388010152016103e8565b346101325760003660031901126101325760206040516000194301408152f35b34610132576000366003190112610132576020604051468152f35b90604060031983011261013257600435801515810361013257916024359067ffffffffffffffff82116101325761019391600401610137565b61025893926060928252602082015281604082015201906101d7565b61029561051f610519366104b5565b916109fe565b604051918291434043846104ee565b34610132576000366003190112610132576020604051488152f35b34610132576000366003190112610132576020604051438152f35b6001600160a01b0381160361013257565b3461013257602036600319011261013257602060043561059481610564565b31604051908152f35b34610132576000366003190112610132576020604051448152f35b6105c136610168565b6105ca816107ec565b9060005b8181106105e357604051806102958582610247565b6105ed8184610866565b516105f98284876109dc565b600080610605836108a1565b6106178260406102d6818801886108ab565b03925af1916106246108ec565b90610639602094859384840152829015159052565b51910135171561064c57506001016105ce565b62461bcd60e51b600052600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260646000fd5b34610132576000366003190112610132576020604051458152f35b34610132576000366003190112610132576020604051418152f35b6102956106c7610519366104b5565b6040519182916020835260208301906101d7565b6106e436610168565b6106ed816107ec565b9160005b82811061070a57604051806102958643804090846104ee565b8061076f61071a60019387610866565b51610726838787610974565b600080823561073481610564565b81610744602095868101906108ab565b9190826040519384928337810182815203925af1906107616108ec565b908301521515809152610996565b016106f1565b34610132576020366003190112610132576020604051600435408152f35b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176107cf57604052565b610793565b67ffffffffffffffff81116107cf5760051b60200190565b906107f96103cf836107d4565b828152809261080a601f19916107d4565b016000805b82811061081c5750505050565b604090815182810181811067ffffffffffffffff8211176107cf57602093528381528260608183015282870101520161080f565b634e487b7160e01b600052603260045260246000fd5b805182101561087a5760209160051b010190565b610850565b919081101561087a5760051b81013590607e1981360301821215610132570190565b3561025881610564565b903590601e1981360301821215610132570180359067ffffffffffffffff82116101325760200191813603831361013257565b908092918237016000815290565b3d15610923573d9067ffffffffffffffff82116107cf57610916601f8301601f19166020016107a9565b9182523d6000602084013e565b606090565b1561092f57565b60405162461bcd60e51b815260206004820152601a60248201527f4d756c746963616c6c333a2076616c7565206d69736d617463680000000000006044820152606490fd5b919081101561087a5760051b81013590603e1981360301821215610132570190565b1561099d57565b60405162461bcd60e51b8152602060048201526017602482015276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b6044820152606490fd5b919081101561087a5760051b81013590605e1981360301821215610132570190565b929190610a0a826107ec565b9360005b838110610a1b5750505050565b80610a2860019288610866565b5183610a35838888610974565b6000808235610a4381610564565b81610a53602095868101906108ab565b9190826040519384928337810182815203925af190610a706108ec565b908401521515809252610a85575b5001610a0e565b610a8e90610996565b38610a7e56fea2646970667358221220be5c55bb3a6f11b9f0691785c17c8976b7420d395bda370d31659d00d11777ee64736f6c63430008190033","sourceMap":"515:9310:86:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;515:9310:86;;;;;;;8985:15;515:9310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;515:9310:86;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;-1:-1:-1;515:9310:86;;;;;;;;;-1:-1:-1;515:9310:86;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;515:9310:86;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;-1:-1:-1;6103:20:86;;;:::i;:::-;6175:13;-1:-1:-1;6190:10:86;;;;;;515:9310;7827:9;7819:66;7827:9;;:27;7819:66;:::i;:::-;6314:11;515:9310;;;;;;:::i;:::-;;;;6175:13;6241;;;;:::i;:::-;;6277:8;;;;;:::i;:::-;-1:-1:-1;6314:11:86;;515:9310;6314:11;;;515:9310;;;;6605:12;;;;:::i;:::-;6635:14;;;;;;;:::i;:::-;515:9310;;;;;;;;;:::i;:::-;6605:45;;;;;;;:::i;:::-;6584:17;6567:83;6584:17;;;;;;;6567:83;;515:9310;;;;;;6567:83;6665:1031;;;;;;;;515:9310;;;6175:13;;6665:1031;;;;-1:-1:-1;6665:1031:86;515:9310;6665:1031;;;;-1:-1:-1;;;6665:1031:86;;;-1:-1:-1;6665:1031:86;515:9310;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;;-1:-1:-1;;515:9310:86;;;:::i;:::-;;-1:-1:-1;515:9310:86;;;;;;1486:13;;-1:-1:-1;1501:10:86;;;;;;515:9310;;;;;1346:12;515:9310;;:::i;1486:13::-;1563:8;1659:43;-1:-1:-1;1563:8:86;;515:9310;1563:8;;;;:::i;:::-;1613:11;1630:13;1613:11;;;:::i;:::-;1630:13;515:9310;1630:13;;;;:::i;:::-;515:9310;;;;;;;;;;:::i;:::-;1613:31;;;;;;:::i;:::-;1586:58;;;;:::i;:::-;;1659:43;:::i;:::-;515:9310;1486:13;;515:9310;;;;;;;;;;;;;;;;;;;-1:-1:-1;;515:9310:86;;;;;;;;;9386:12;515:9310;9376:27;515:9310;;;;;;;;;-1:-1:-1;;515:9310:86;;;;;;;9801:13;515:9310;;;;;;-1:-1:-1;;515:9310:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3284:35;515:9310;;;:::i;:::-;3284:35;;:::i;:::-;515:9310;;3202:12;;;;3237:23;3202:12;515:9310;;:::i;:::-;;;;;;-1:-1:-1;;515:9310:86;;;;;;;9653:13;515:9310;;;;;;;;;-1:-1:-1;;515:9310:86;;;;;;;8292:12;515:9310;;;;-1:-1:-1;;;;;515:9310:86;;;;;:::o;:::-;;;;;;-1:-1:-1;;515:9310:86;;;;;;;;;;:::i;:::-;9174:12;515:9310;;;;;;;;;;;;-1:-1:-1;;515:9310:86;;;;;;;8638:16;515:9310;;;;;;;:::i;:::-;4297:20;;;:::i;:::-;4364:13;-1:-1:-1;4379:10:86;;;;;;4545:14;515:9310;;;;;;:::i;4364:13::-;4430;;;;:::i;:::-;;4466:8;;;;;:::i;:::-;-1:-1:-1;4527:12:86;;;;:::i;:::-;515:9310;4545:14;;;;;;;;:::i;515:9310::-;4527:33;;;;;;;:::i;:::-;4506:17;4489:71;4506:17;;;;;;;4489:71;;515:9310;;;;;;4489:71;4575:1031;;;;;;;;515:9310;;;4364:13;;4575:1031;6665;;;-1:-1:-1;4575:1031:86;515:9310;4575:1031;;;;-1:-1:-1;;;4575:1031:86;;;-1:-1:-1;4575:1031:86;515:9310;;;;;;-1:-1:-1;;515:9310:86;;;;;;;8811:14;515:9310;;;;;;;;;-1:-1:-1;;515:9310:86;;;;;;;8460:14;515:9310;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;2227:20;;;:::i;:::-;2292:13;-1:-1:-1;2307:10:86;;;;;;515:9310;;;;;3202:12;3237:23;;;515:9310;;:::i;2292:13::-;2358;2520:50;2358:13;3930:4;2358:13;;;:::i;:::-;;2393:8;;;;;:::i;:::-;-1:-1:-1;515:9310:86;;;;;;:::i;:::-;2471:13;;;;;;;;;:::i;:::-;515:9310;;;;;;;;;;;;;;;2454:31;;;;;;;:::i;:::-;2433:17;;;2416:69;515:9310;;;;;2520:50;:::i;:::-;515:9310;2292:13;;515:9310;;;;;;-1:-1:-1;;515:9310:86;;;;;;;;;8119:22;515:9310;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;515:9310:86;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;515:9310:86;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;515:9310:86;;;;:::i;:::-;;;;;-1:-1:-1;515:9310:86;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;515:9310:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;515:9310:86;;;;;;;;;;;;-1:-1:-1;;;515:9310:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2045:576::-;;;;2227:20;;;:::i;:::-;2292:13;-1:-1:-1;2307:10:86;;;;;;2045:576;;;;:::o;2292:13::-;2358;;515:9310;2358:13;;;:::i;:::-;;2393:8;;;;;;:::i;:::-;-1:-1:-1;515:9310:86;;;;;;:::i;:::-;2471:13;;;;;;;;;:::i;:::-;515:9310;;;;;;;;;;;;;;;2454:31;;;;;;;:::i;:::-;2433:17;;;2416:69;515:9310;;;;;2500:70;;2292:13;515:9310;;2292:13;;2500:70;2520:50;;;:::i;:::-;2500:70;;","linkReferences":{}},"methodIdentifiers":{"aggregate((address,bytes)[])":"252dba42","aggregate3((address,bool,bytes)[])":"82ad56cb","aggregate3Value((address,bool,uint256,bytes)[])":"174dea71","blockAndAggregate((address,bytes)[])":"c3077fa9","getBasefee()":"3e64a696","getBlockHash(uint256)":"ee82ac5e","getBlockNumber()":"42cbb15c","getChainId()":"3408e470","getCurrentBlockCoinbase()":"a8b0574e","getCurrentBlockDifficulty()":"72425d9d","getCurrentBlockGasLimit()":"86d516e8","getCurrentBlockTimestamp()":"0f28c97d","getEthBalance(address)":"4d2301cc","getLastBlockHash()":"27e86d6e","tryAggregate(bool,(address,bytes)[])":"bce38bd7","tryBlockAndAggregate(bool,(address,bytes)[])":"399542e9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call3[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowFailure\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call3Value[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate3Value\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"blockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBasefee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"basefee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockCoinbase\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"coinbase\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockDifficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockGasLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gaslimit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryAggregate\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"requireSuccess\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"tryBlockAndAggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall3.Result[]\",\"name\":\"returnData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Michael Elliot <mike@makerdao.com>Joshua Levine <joshua@makerdao.com>Nick Johnson <arachnid@notdot.net>Andreas Bigger <andreas@nascent.xyz>Matt Solomon <matt@mattsolomon.dev>\",\"details\":\"Multicall & Multicall2 backwards-compatibleAggregate methods are marked `payable` to save 24 gas per call\",\"kind\":\"dev\",\"methods\":{\"aggregate((address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of bytes containing the responses\"}},\"aggregate3((address,bool,bytes)[])\":{\"params\":{\"calls\":\"An array of Call3 structs\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"aggregate3Value((address,bool,uint256,bytes)[])\":{\"params\":{\"calls\":\"An array of Call3Value structs\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"blockAndAggregate((address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockHash\":\"The hash of the block where the calls were executed\",\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of Result structs\"}},\"getBlockHash(uint256)\":{\"params\":{\"blockNumber\":\"The block number\"}},\"tryAggregate(bool,(address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\",\"requireSuccess\":\"If true, require all calls to succeed\"},\"returns\":{\"returnData\":\"An array of Result structs\"}},\"tryBlockAndAggregate(bool,(address,bytes)[])\":{\"params\":{\"calls\":\"An array of Call structs\"},\"returns\":{\"blockHash\":\"The hash of the block where the calls were executed\",\"blockNumber\":\"The block number where the calls were executed\",\"returnData\":\"An array of Result structs\"}}},\"title\":\"Multicall3\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregate((address,bytes)[])\":{\"notice\":\"Backwards-compatible call aggregation with Multicall\"},\"aggregate3((address,bool,bytes)[])\":{\"notice\":\"Aggregate calls, ensuring each returns success if required\"},\"aggregate3Value((address,bool,uint256,bytes)[])\":{\"notice\":\"Aggregate calls with a msg valueReverts if msg.value is less than the sum of the call values\"},\"blockAndAggregate((address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate\"},\"getBasefee()\":{\"notice\":\"Gets the base fee of the given blockCan revert if the BASEFEE opcode is not implemented by the given chain\"},\"getBlockHash(uint256)\":{\"notice\":\"Returns the block hash for the given block number\"},\"getBlockNumber()\":{\"notice\":\"Returns the block number\"},\"getChainId()\":{\"notice\":\"Returns the chain id\"},\"getCurrentBlockCoinbase()\":{\"notice\":\"Returns the block coinbase\"},\"getCurrentBlockDifficulty()\":{\"notice\":\"Returns the block difficulty\"},\"getCurrentBlockGasLimit()\":{\"notice\":\"Returns the block gas limit\"},\"getCurrentBlockTimestamp()\":{\"notice\":\"Returns the block timestamp\"},\"getEthBalance(address)\":{\"notice\":\"Returns the (ETH) balance of a given address\"},\"getLastBlockHash()\":{\"notice\":\"Returns the block hash of the last block\"},\"tryAggregate(bool,(address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls without requiring success\"},\"tryBlockAndAggregate(bool,(address,bytes)[])\":{\"notice\":\"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate\"}},\"notice\":\"Aggregate results from multiple function calls\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DKIM/contracts/Multicall3.sol\":\"Multicall3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/solsha1/=lib/solsha1/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":buffer/=lib/buffer/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solsha1/=lib/solsha1/contracts/\"],\"viaIR\":true},\"sources\":{\"src/DKIM/contracts/Multicall3.sol\":{\"keccak256\":\"0x375518616a761c489b2da53fc6dbf8b019a9e69b3128b96d4cdbfd4c827d9d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3b0c750edf356a7aaa4cc5717ba86f270413717dd2f9ec3190f90c06be04463\",\"dweb:/ipfs/QmYpiDbxmpbwR4Nmwnnd4eSPXMyJf45pLL1x9LB5CDLNCs\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"aggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}]},{"inputs":[{"internalType":"struct Multicall3.Call3[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"allowFailure","type":"bool"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"aggregate3","outputs":[{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[{"internalType":"struct Multicall3.Call3Value[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"allowFailure","type":"bool"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"aggregate3Value","outputs":[{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"blockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBasefee","outputs":[{"internalType":"uint256","name":"basefee","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function","name":"getBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getChainId","outputs":[{"internalType":"uint256","name":"chainid","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockCoinbase","outputs":[{"internalType":"address","name":"coinbase","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockDifficulty","outputs":[{"internalType":"uint256","name":"difficulty","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockGasLimit","outputs":[{"internalType":"uint256","name":"gaslimit","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"stateMutability":"view","type":"function","name":"getEthBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLastBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"tryAggregate","outputs":[{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"internalType":"struct Multicall3.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"tryBlockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"struct Multicall3.Result[]","name":"returnData","type":"tuple[]","components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}]}]}],"devdoc":{"kind":"dev","methods":{"aggregate((address,bytes)[])":{"params":{"calls":"An array of Call structs"},"returns":{"blockNumber":"The block number where the calls were executed","returnData":"An array of bytes containing the responses"}},"aggregate3((address,bool,bytes)[])":{"params":{"calls":"An array of Call3 structs"},"returns":{"returnData":"An array of Result structs"}},"aggregate3Value((address,bool,uint256,bytes)[])":{"params":{"calls":"An array of Call3Value structs"},"returns":{"returnData":"An array of Result structs"}},"blockAndAggregate((address,bytes)[])":{"params":{"calls":"An array of Call structs"},"returns":{"blockHash":"The hash of the block where the calls were executed","blockNumber":"The block number where the calls were executed","returnData":"An array of Result structs"}},"getBlockHash(uint256)":{"params":{"blockNumber":"The block number"}},"tryAggregate(bool,(address,bytes)[])":{"params":{"calls":"An array of Call structs","requireSuccess":"If true, require all calls to succeed"},"returns":{"returnData":"An array of Result structs"}},"tryBlockAndAggregate(bool,(address,bytes)[])":{"params":{"calls":"An array of Call structs"},"returns":{"blockHash":"The hash of the block where the calls were executed","blockNumber":"The block number where the calls were executed","returnData":"An array of Result structs"}}},"version":1},"userdoc":{"kind":"user","methods":{"aggregate((address,bytes)[])":{"notice":"Backwards-compatible call aggregation with Multicall"},"aggregate3((address,bool,bytes)[])":{"notice":"Aggregate calls, ensuring each returns success if required"},"aggregate3Value((address,bool,uint256,bytes)[])":{"notice":"Aggregate calls with a msg valueReverts if msg.value is less than the sum of the call values"},"blockAndAggregate((address,bytes)[])":{"notice":"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate"},"getBasefee()":{"notice":"Gets the base fee of the given blockCan revert if the BASEFEE opcode is not implemented by the given chain"},"getBlockHash(uint256)":{"notice":"Returns the block hash for the given block number"},"getBlockNumber()":{"notice":"Returns the block number"},"getChainId()":{"notice":"Returns the chain id"},"getCurrentBlockCoinbase()":{"notice":"Returns the block coinbase"},"getCurrentBlockDifficulty()":{"notice":"Returns the block difficulty"},"getCurrentBlockGasLimit()":{"notice":"Returns the block gas limit"},"getCurrentBlockTimestamp()":{"notice":"Returns the block timestamp"},"getEthBalance(address)":{"notice":"Returns the (ETH) balance of a given address"},"getLastBlockHash()":{"notice":"Returns the block hash of the last block"},"tryAggregate(bool,(address,bytes)[])":{"notice":"Backwards-compatible with Multicall2Aggregate calls without requiring success"},"tryBlockAndAggregate(bool,(address,bytes)[])":{"notice":"Backwards-compatible with Multicall2Aggregate calls and allow failures using tryAggregate"}},"version":1}},"settings":{"remappings":["@ensdomains/buffer/=lib/buffer/","@ensdomains/solsha1/=lib/solsha1/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","account-abstraction/=lib/account-abstraction/contracts/","buffer/=lib/buffer/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solsha1/=lib/solsha1/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/DKIM/contracts/Multicall3.sol":"Multicall3"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"src/DKIM/contracts/Multicall3.sol":{"keccak256":"0x375518616a761c489b2da53fc6dbf8b019a9e69b3128b96d4cdbfd4c827d9d9f","urls":["bzz-raw://e3b0c750edf356a7aaa4cc5717ba86f270413717dd2f9ec3190f90c06be04463","dweb:/ipfs/QmYpiDbxmpbwR4Nmwnnd4eSPXMyJf45pLL1x9LB5CDLNCs"],"license":"MIT"}},"version":1},"id":86}