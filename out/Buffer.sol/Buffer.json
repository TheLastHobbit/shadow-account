{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a84909ba4b89dfd90a69c445c0a15289d4f28283b540397cd63f340ae586e5664736f6c63430008190033","sourceMap":"456:8763:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;456:8763:18;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a84909ba4b89dfd90a69c445c0a15289d4f28283b540397cd63f340ae586e5664736f6c63430008190033","sourceMap":"456:8763:18:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for appending to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/buffer/contracts/Buffer.sol\":\"Buffer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/solsha1/=lib/solsha1/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":buffer/=lib/buffer/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solsha1/=lib/solsha1/contracts/\"]},\"sources\":{\"lib/buffer/contracts/Buffer.sol\":{\"keccak256\":\"0x19abd5165eeec6be98e4eb51516d542db46ae7de1c3c9f624a063827cf822967\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://d94955aefb2461393e956ca9f435ab2826801ab11506573a64d2e8944c3609f6\",\"dweb:/ipfs/QmeFjFUky2BVnK7ZRuTxFnHeqUQiPBv9QRd6R9YdonRRpw\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ensdomains/buffer/=lib/buffer/","@ensdomains/solsha1/=lib/solsha1/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","account-abstraction/=lib/account-abstraction/contracts/","buffer/=lib/buffer/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solsha1/=lib/solsha1/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/buffer/contracts/Buffer.sol":"Buffer"},"evmVersion":"paris","libraries":{}},"sources":{"lib/buffer/contracts/Buffer.sol":{"keccak256":"0x19abd5165eeec6be98e4eb51516d542db46ae7de1c3c9f624a063827cf822967","urls":["bzz-raw://d94955aefb2461393e956ca9f435ab2826801ab11506573a64d2e8944c3609f6","dweb:/ipfs/QmeFjFUky2BVnK7ZRuTxFnHeqUQiPBv9QRd6R9YdonRRpw"],"license":"BSD-2-Clause"}},"version":1},"id":18}