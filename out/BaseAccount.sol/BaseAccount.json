{"abi":[{"type":"function","name":"entryPoint","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IEntryPoint"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"validateUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"},{"name":"missingAccountFunds","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"validationData","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"entryPoint()":"b0d691fe","getNonce()":"d087d288","validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"authorizer\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \\\"indefinite\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"notice\":\"Basic account implementation. This contract provides the basic logic for implementing the IAccount interface - validateUserOp Specific account implementation should inherit it and provide the account-specific logic.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/account-abstraction/contracts/core/BaseAccount.sol\":\"BaseAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/solsha1/=lib/solsha1/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":buffer/=lib/buffer/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solsha1/=lib/solsha1/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x5f061996c20e39580d0f04b826c2989d69ff0c9cd9b2bdaf2810aaf9853a279d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://78442068de849ab631cfbf213b9dcdd0d05fc3aa55a648ced9c57f539746ced0\",\"dweb:/ipfs/QmYGNJwFMeH6agqFtCuRF62zJDuuMH8MHohhT9NZoKohSK\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x8d53b7290af97b8d6baf9369d164368bc0177b24e6ba56b06036a129e4dea3da\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a23326817b046dd83dbf25085f8c33c4d3c238ea30a00723b205f106d7c0a342\",\"dweb:/ipfs/QmYdPzzbhjdanGebwBSZXecyRgHkU2yk25QyzXJa8pekQY\"]},\"lib/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9064bf5c71570f8319f1f0eec6935c3fcd2c8af0a24f773782e209c9198ed9a0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fc2bd3d68a0aef4bc379e4bc7c5e30be4681bbdf17a1a37ab6f234038f569e6d\",\"dweb:/ipfs/QmQbyNtmJmCdQtHpxPsG8yDEoSTwt9n2TvJMSJvo8DMYA9\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x2131b46acdfec2673f5210830a521ac5bcdcbdd48d994504b675cc9e6470bb30\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fa1ae08e6a7f4ffb7caace57aebb5b1434ae5dff28939583dcb7056b31ec9861\",\"dweb:/ipfs/QmQMrDQ3TypPcWQthDZq7fWCiJx242fxZMbesDCH7Fttvu\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x0ddbae3f61ffb233964022c5418d01b4f209587b6b6f029f1d011a13e6d82c91\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://706df609df52ecda766a203c62fca5e311f400de4fd8c1f2002b72732fab4a0b\",\"dweb:/ipfs/QmZtbV6KxEHpshgcNuDYwa79V8hbE86HuVmAU7hf8iCSv3\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0xe548d9c589b26f2aa35a4baa8a823288ba09ada75b33198e468426d5da395201\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ac9ef76d7a3195128f87e4ef3f6b457a9fde257dfc904eb2167b03252f2cbad0\",\"dweb:/ipfs/QmeasqPnjkWZ5Ntcb8Ze6dt498iu1P4fFRpEkJtZBp5Htu\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x296845783edaf9b6bd7e056d10920993c70872734680b1f8d0f04a74deb6de48\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://97dc08400b43901c57a4a37cd3e2f8891f39b44b3bb9768d389f5fe4b40bcf63\",\"dweb:/ipfs/QmTrATZAn3xaSgaosANonp3fgTZRnPG2zed9GN7GjKhumU\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xc82725f068eefc49db3d0832173f286ed7a5bc7e61487c1d76d9cf85d1b6b6c6\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://cf5ed0e991d2e42ff9e035b5e566600ed82397e9c330886a5c458f4ce9e90c7f\",\"dweb:/ipfs/QmTcsE4QGmhFdEcDMDSakv444B2Wz9bazfTGyet8MzBj7a\"]},\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xde8ca087dd43611c41830355276b686d6b758c01ce17983d74292709f9c33b63\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dbc5b8d5c7ae6c5c219cf432b1f5428a91b3cf5f4397d6d5ffca6d4802e7bda2\",\"dweb:/ipfs/QmNx9RZC8HZ53NJifwSyvkavdKPD9Pda4GbxGJjNAGTJSs\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379\",\"dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x11486a2095bf38739d219b04bcb8c11dca289cef73c1606973dcba8376ea5fe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73cb40591f4b42357484e0361b71edf1103c973e40bdce32be0de7f6a7507b1a\",\"dweb:/ipfs/QmZtw6bfDHCTBhyeXhpECemAWsnjub4UNqGqVgebcLHeDw\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xecbc8121ca6d86c6a5cd77eef36373e2071cc38b076195d95d6c35507854aaa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bc014f38ed13ce4d92352085b858843687dc72a4a53efa49849000e5ef7779\",\"dweb:/ipfs/Qmc81Wz2KJD2eX3Bz2dTPrQCpMHjrRqCFG5L24dZbo6Xkb\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x7893f3bde65ba1d00f78704b16b560a14193bc70476f4d5d165f27512896bc5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58823fca486c54f7af8ec764ed4d6da081e9546576ae32049baccd9cc8cd52ef\",\"dweb:/ipfs/Qme3YFQvBYv8NbuTmqEGFHhtqVPjEWRADSrGKeaGzzhRM3\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b\",\"dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd8725477cd4ae4cf3b7fa0854ecb52b33d829430f92e7ee97fb0698f608dd456\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6525c5064b5b4be7141df6fae697dc8e06753450e3628fed185302f81b31209a\",\"dweb:/ipfs/QmbTnwZCipKtiYpTk3TE5atA61zy2kzbspBQrULnRMp5Qk\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x3dd22b4470e29e7682793368ecd22af2f31b7386077aff47e22dcf9198a47736\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5b71f740770d2c2b0aa6b03b2385ed0dadde3a04de17257ed7d383c494afffe\",\"dweb:/ipfs/QmdEm4iYKJcXYnGB78qCMH1gCrjUt3pwdbXpFMju53WkT6\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8\",\"dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd946b69491694ec31f2c121df33493244fd19d59030ca77d933bd15b16bf1da2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15c7b2b6e8e2c0ed01273cbe65a48cbd887cc9143d65f033827d10e2cbbf0742\",\"dweb:/ipfs/Qma6B1fV7C7qn5FU2nKMXLj4Miq9hLpPzP6TAX6oDeE98E\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a\",\"dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0x57752c42c540dbe50f9de7d2f2aa6cda33ab4ada47de5053a2b666d20618cc8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://518946ef892640e6891b12a5df1b82b6278f7dcd059625c877c11bd1488d08c3\",\"dweb:/ipfs/QmbxPqkduPLmFWQDQNVEKXo3eTqPvMXvnGzg5pCcBC6FkU\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6cfb17e11af44a312e9131645492c3bfda65b386cd1ebf6b012f9891a7b1e969\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6fb4b13c1f621e3d83ef24cca63c88c9e76bfc78657ba2f6f2997b8f13a7dba\",\"dweb:/ipfs/QmV4rLWRsq2q61ysELqQpM8tgGAJg9XoAH4tvqFZzrNXab\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x07e33593746b3f2dccd1ad4c410c46454b271b61e57a031f9688dd3fe8903c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://730245c24b7e2a9c80eb5843c63e982141321cd130321e409a407b89d74513ec\",\"dweb:/ipfs/QmTm7nSipNcThePJs81nkbxLKNALTCVwjwHWoHHRT5TBmD\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb853043a0842d8175c31682963fc4296f49ebd6825496f04189d59547fb6219e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f79c80ea02b1286dd1bae442384bf4efba9ba697f20255a1b78988660a5d5219\",\"dweb:/ipfs/QmQjV8BSg5BwuaGFqKna8xkiqw3s8VMyx4sLqvEANWCVBb\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42\",\"dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4\",\"dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x3d464df32403829cb5bb177bb2f831d48fb95bbf210514beefa1b04130f882e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66dff56169744c5d7aa3efa9ca97d12a061e0002694074105b9136f45955dec3\",\"dweb:/ipfs/QmYa78JHJiPhcwnZ7DbZLvsibhY1JEYthGx2K58BWrGvab\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x5a4707058b614dcff79922315484f673d0ce50e34587de71f67f09d05547f1c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://caf361a64c4e8af8e752891d98c6ed118c07bd4e8ef1291d3261445be5651aeb\",\"dweb:/ipfs/QmYWq3hVdYxMD1m6ZNouAxFjXW3XmHjVKTNWuaEUTvisdZ\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xbb243ce696795fbab0a471ba1441cbfe8efdf1dbe9b55bd1f07a17fde15c4ec4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://986de6a9b4d81b3bbdf60adb5d5e969ab17c67a823b966e18e8c32c75acb701e\",\"dweb:/ipfs/QmeZa4UUv5RzrqsoJJkYuTmoHN29qiHE1ZUHPk1jsE7kAU\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20\",\"dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0x597922632ab771e3dd773e2a10b5fd140b3e8789664010f55cf0f07729ae887a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bbb0a66dfea08a316b72909bb0c52aad17a1a24097dc0656d85bf41a42ac270\",\"dweb:/ipfs/QmfUYnwWrsoKywXQKEE1HygLbJ7AJq9FRrfxPpEsxWrZGu\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x90ace7541b71df03ff80d1ed9f60e4b7462dd22f508555f1d5a3f0f80469e4e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://caef23b0d90bba70804b57447a46083e0085b4758ca77febd2a0b7f72243243e\",\"dweb:/ipfs/QmUwHbTjLpPYQN7xmugPT24uUokCEDfFXRK3sL9pvfd5x9\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1\",\"dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"details":"Must validate caller is the entryPoint.      Must validate the signature and nonce","params":{"missingAccountFunds":"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.","userOp":"- The operation that is about to be executed.","userOpHash":"- Hash of the user's request data. can be used as the basis for signature."},"returns":{"validationData":"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \"authorizer\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \"indefinite\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly."}}},"version":1},"userdoc":{"kind":"user","methods":{"entryPoint()":{"notice":"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account."},"getNonce()":{"notice":"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"},"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"notice":"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."}},"version":1}},"settings":{"remappings":["@ensdomains/buffer/=lib/buffer/","@ensdomains/solsha1/=lib/solsha1/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","account-abstraction/=lib/account-abstraction/contracts/","buffer/=lib/buffer/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solsha1/=lib/solsha1/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/account-abstraction/contracts/core/BaseAccount.sol":"BaseAccount"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/account-abstraction/contracts/core/BaseAccount.sol":{"keccak256":"0x5f061996c20e39580d0f04b826c2989d69ff0c9cd9b2bdaf2810aaf9853a279d","urls":["bzz-raw://78442068de849ab631cfbf213b9dcdd0d05fc3aa55a648ced9c57f539746ced0","dweb:/ipfs/QmYGNJwFMeH6agqFtCuRF62zJDuuMH8MHohhT9NZoKohSK"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/core/Helpers.sol":{"keccak256":"0x8d53b7290af97b8d6baf9369d164368bc0177b24e6ba56b06036a129e4dea3da","urls":["bzz-raw://a23326817b046dd83dbf25085f8c33c4d3c238ea30a00723b205f106d7c0a342","dweb:/ipfs/QmYdPzzbhjdanGebwBSZXecyRgHkU2yk25QyzXJa8pekQY"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/core/UserOperationLib.sol":{"keccak256":"0x9064bf5c71570f8319f1f0eec6935c3fcd2c8af0a24f773782e209c9198ed9a0","urls":["bzz-raw://fc2bd3d68a0aef4bc379e4bc7c5e30be4681bbdf17a1a37ab6f234038f569e6d","dweb:/ipfs/QmQbyNtmJmCdQtHpxPsG8yDEoSTwt9n2TvJMSJvo8DMYA9"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/IAccount.sol":{"keccak256":"0x2131b46acdfec2673f5210830a521ac5bcdcbdd48d994504b675cc9e6470bb30","urls":["bzz-raw://fa1ae08e6a7f4ffb7caace57aebb5b1434ae5dff28939583dcb7056b31ec9861","dweb:/ipfs/QmQMrDQ3TypPcWQthDZq7fWCiJx242fxZMbesDCH7Fttvu"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/IAggregator.sol":{"keccak256":"0x0ddbae3f61ffb233964022c5418d01b4f209587b6b6f029f1d011a13e6d82c91","urls":["bzz-raw://706df609df52ecda766a203c62fca5e311f400de4fd8c1f2002b72732fab4a0b","dweb:/ipfs/QmZtbV6KxEHpshgcNuDYwa79V8hbE86HuVmAU7hf8iCSv3"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol":{"keccak256":"0xe548d9c589b26f2aa35a4baa8a823288ba09ada75b33198e468426d5da395201","urls":["bzz-raw://ac9ef76d7a3195128f87e4ef3f6b457a9fde257dfc904eb2167b03252f2cbad0","dweb:/ipfs/QmeasqPnjkWZ5Ntcb8Ze6dt498iu1P4fFRpEkJtZBp5Htu"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/INonceManager.sol":{"keccak256":"0x296845783edaf9b6bd7e056d10920993c70872734680b1f8d0f04a74deb6de48","urls":["bzz-raw://97dc08400b43901c57a4a37cd3e2f8891f39b44b3bb9768d389f5fe4b40bcf63","dweb:/ipfs/QmTrATZAn3xaSgaosANonp3fgTZRnPG2zed9GN7GjKhumU"],"license":"GPL-3.0"},"lib/account-abstraction/contracts/interfaces/IStakeManager.sol":{"keccak256":"0xc82725f068eefc49db3d0832173f286ed7a5bc7e61487c1d76d9cf85d1b6b6c6","urls":["bzz-raw://cf5ed0e991d2e42ff9e035b5e566600ed82397e9c330886a5c458f4ce9e90c7f","dweb:/ipfs/QmTcsE4QGmhFdEcDMDSakv444B2Wz9bazfTGyet8MzBj7a"],"license":"GPL-3.0-only"},"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0xde8ca087dd43611c41830355276b686d6b758c01ce17983d74292709f9c33b63","urls":["bzz-raw://dbc5b8d5c7ae6c5c219cf432b1f5428a91b3cf5f4397d6d5ffca6d4802e7bda2","dweb:/ipfs/QmNx9RZC8HZ53NJifwSyvkavdKPD9Pda4GbxGJjNAGTJSs"],"license":"GPL-3.0"},"lib/forge-std/src/Base.sol":{"keccak256":"0x658ad7c2171d17c092c21f7834536c6da1309e9e0e64de2ff6b4afbad6ccd261","urls":["bzz-raw://4ed5efd8b2c1567bdb73550566b9c5b833e000682bd71d59f80b844edab18379","dweb:/ipfs/QmepP8nqGWqZ8338GbzFTGPJgFuZ2e6EeSoCBf85uaQ4fn"],"license":"MIT"},"lib/forge-std/src/StdAssertions.sol":{"keccak256":"0x11486a2095bf38739d219b04bcb8c11dca289cef73c1606973dcba8376ea5fe6","urls":["bzz-raw://73cb40591f4b42357484e0361b71edf1103c973e40bdce32be0de7f6a7507b1a","dweb:/ipfs/QmZtw6bfDHCTBhyeXhpECemAWsnjub4UNqGqVgebcLHeDw"],"license":"MIT"},"lib/forge-std/src/StdChains.sol":{"keccak256":"0xecbc8121ca6d86c6a5cd77eef36373e2071cc38b076195d95d6c35507854aaa2","urls":["bzz-raw://49bc014f38ed13ce4d92352085b858843687dc72a4a53efa49849000e5ef7779","dweb:/ipfs/Qmc81Wz2KJD2eX3Bz2dTPrQCpMHjrRqCFG5L24dZbo6Xkb"],"license":"MIT"},"lib/forge-std/src/StdCheats.sol":{"keccak256":"0x7893f3bde65ba1d00f78704b16b560a14193bc70476f4d5d165f27512896bc5b","urls":["bzz-raw://58823fca486c54f7af8ec764ed4d6da081e9546576ae32049baccd9cc8cd52ef","dweb:/ipfs/Qme3YFQvBYv8NbuTmqEGFHhtqVPjEWRADSrGKeaGzzhRM3"],"license":"MIT"},"lib/forge-std/src/StdError.sol":{"keccak256":"0xce23c8ef835f3e9163487858105ebef195f9d42de5ae79e56417cfe66914c701","urls":["bzz-raw://e6c82a6bf10b9c9d92a0dbba09a88adab28ffe7c3a23bd83eb13ceff1358681b","dweb:/ipfs/QmQR6HQ7QGGeH8TPXrFz9vSb7wvoCnwmuBJ4vGpCmLmPb6"],"license":"MIT"},"lib/forge-std/src/StdInvariant.sol":{"keccak256":"0xd8725477cd4ae4cf3b7fa0854ecb52b33d829430f92e7ee97fb0698f608dd456","urls":["bzz-raw://6525c5064b5b4be7141df6fae697dc8e06753450e3628fed185302f81b31209a","dweb:/ipfs/QmbTnwZCipKtiYpTk3TE5atA61zy2kzbspBQrULnRMp5Qk"],"license":"MIT"},"lib/forge-std/src/StdJson.sol":{"keccak256":"0x3dd22b4470e29e7682793368ecd22af2f31b7386077aff47e22dcf9198a47736","urls":["bzz-raw://b5b71f740770d2c2b0aa6b03b2385ed0dadde3a04de17257ed7d383c494afffe","dweb:/ipfs/QmdEm4iYKJcXYnGB78qCMH1gCrjUt3pwdbXpFMju53WkT6"],"license":"MIT"},"lib/forge-std/src/StdMath.sol":{"keccak256":"0x2937c68a288dbb54c9bb4209119817ea197ffbed21167c493f14dcbbc327c399","urls":["bzz-raw://a222d841d2d7e9bb92cf1fb0018a2b8f56d7829a7cab0dba8aa1ca6e7ef693a8","dweb:/ipfs/QmUvKzRrjPthS5m4rKrs7zGq38xgjWRrQpKMLQJrHkAgX6"],"license":"MIT"},"lib/forge-std/src/StdStorage.sol":{"keccak256":"0xd946b69491694ec31f2c121df33493244fd19d59030ca77d933bd15b16bf1da2","urls":["bzz-raw://15c7b2b6e8e2c0ed01273cbe65a48cbd887cc9143d65f033827d10e2cbbf0742","dweb:/ipfs/Qma6B1fV7C7qn5FU2nKMXLj4Miq9hLpPzP6TAX6oDeE98E"],"license":"MIT"},"lib/forge-std/src/StdStyle.sol":{"keccak256":"0xe3e5d092bfcad345b1c25ea431473039295fbd9efde2b702881f1f4edc2c1417","urls":["bzz-raw://89b16a8e997a1bed9ffb113924222d521542b1bc13b475763d8a8b890a27cd8a","dweb:/ipfs/QmXeeuDTgjBYWgun7EiQgUJZF9JVKdARNM8qobLHdG9r4Q"],"license":"MIT"},"lib/forge-std/src/StdToml.sol":{"keccak256":"0x57752c42c540dbe50f9de7d2f2aa6cda33ab4ada47de5053a2b666d20618cc8d","urls":["bzz-raw://518946ef892640e6891b12a5df1b82b6278f7dcd059625c877c11bd1488d08c3","dweb:/ipfs/QmbxPqkduPLmFWQDQNVEKXo3eTqPvMXvnGzg5pCcBC6FkU"],"license":"MIT"},"lib/forge-std/src/StdUtils.sol":{"keccak256":"0x6cfb17e11af44a312e9131645492c3bfda65b386cd1ebf6b012f9891a7b1e969","urls":["bzz-raw://b6fb4b13c1f621e3d83ef24cca63c88c9e76bfc78657ba2f6f2997b8f13a7dba","dweb:/ipfs/QmV4rLWRsq2q61ysELqQpM8tgGAJg9XoAH4tvqFZzrNXab"],"license":"MIT"},"lib/forge-std/src/Test.sol":{"keccak256":"0x07e33593746b3f2dccd1ad4c410c46454b271b61e57a031f9688dd3fe8903c93","urls":["bzz-raw://730245c24b7e2a9c80eb5843c63e982141321cd130321e409a407b89d74513ec","dweb:/ipfs/QmTm7nSipNcThePJs81nkbxLKNALTCVwjwHWoHHRT5TBmD"],"license":"MIT"},"lib/forge-std/src/Vm.sol":{"keccak256":"0xb853043a0842d8175c31682963fc4296f49ebd6825496f04189d59547fb6219e","urls":["bzz-raw://f79c80ea02b1286dd1bae442384bf4efba9ba697f20255a1b78988660a5d5219","dweb:/ipfs/QmQjV8BSg5BwuaGFqKna8xkiqw3s8VMyx4sLqvEANWCVBb"],"license":"MIT OR Apache-2.0"},"lib/forge-std/src/console.sol":{"keccak256":"0xbbdc11ec3a00e6b8c6c76e7f0ea46581239faee116324de4184dd0af011dd837","urls":["bzz-raw://10581f46c044a7561d25d8ea203f4e89e13a807b40bf9d87520f69407447de42","dweb:/ipfs/QmSFVUzcDB9QtNyjJ5fLzi3kqKhtEbDD7TZMgbzJ9wiC63"],"license":"MIT"},"lib/forge-std/src/console2.sol":{"keccak256":"0x194c2bb6bb02214ca445209140821fdad6f82fc1672ec900a31e4f7547ee34fb","urls":["bzz-raw://2bde7d0db7b21399717c6969027759ec7dfa3563c543a577dfd6b140803325e4","dweb:/ipfs/QmV5CKK1yECaPAeA7edxuftEwUXGLxVR4vSeBZRcWQkbkE"],"license":"MIT"},"lib/forge-std/src/interfaces/IERC165.sol":{"keccak256":"0x3d464df32403829cb5bb177bb2f831d48fb95bbf210514beefa1b04130f882e8","urls":["bzz-raw://66dff56169744c5d7aa3efa9ca97d12a061e0002694074105b9136f45955dec3","dweb:/ipfs/QmYa78JHJiPhcwnZ7DbZLvsibhY1JEYthGx2K58BWrGvab"],"license":"MIT"},"lib/forge-std/src/interfaces/IERC20.sol":{"keccak256":"0x5a4707058b614dcff79922315484f673d0ce50e34587de71f67f09d05547f1c4","urls":["bzz-raw://caf361a64c4e8af8e752891d98c6ed118c07bd4e8ef1291d3261445be5651aeb","dweb:/ipfs/QmYWq3hVdYxMD1m6ZNouAxFjXW3XmHjVKTNWuaEUTvisdZ"],"license":"MIT"},"lib/forge-std/src/interfaces/IERC721.sol":{"keccak256":"0xbb243ce696795fbab0a471ba1441cbfe8efdf1dbe9b55bd1f07a17fde15c4ec4","urls":["bzz-raw://986de6a9b4d81b3bbdf60adb5d5e969ab17c67a823b966e18e8c32c75acb701e","dweb:/ipfs/QmeZa4UUv5RzrqsoJJkYuTmoHN29qiHE1ZUHPk1jsE7kAU"],"license":"MIT"},"lib/forge-std/src/interfaces/IMulticall3.sol":{"keccak256":"0x1313e079d13b9f3a47177eff1d226c41b0b51c0802c248d47d038eb65a084307","urls":["bzz-raw://2b51e2203055cda450dc04ce55644f209f67e208fc143a1f118cff66de010f20","dweb:/ipfs/QmVtQjmG6YnHaDt81TvJM74TvzEh3SULR3HyzxVQFM59xZ"],"license":"MIT"},"lib/forge-std/src/mocks/MockERC20.sol":{"keccak256":"0x597922632ab771e3dd773e2a10b5fd140b3e8789664010f55cf0f07729ae887a","urls":["bzz-raw://8bbb0a66dfea08a316b72909bb0c52aad17a1a24097dc0656d85bf41a42ac270","dweb:/ipfs/QmfUYnwWrsoKywXQKEE1HygLbJ7AJq9FRrfxPpEsxWrZGu"],"license":"MIT"},"lib/forge-std/src/mocks/MockERC721.sol":{"keccak256":"0x90ace7541b71df03ff80d1ed9f60e4b7462dd22f508555f1d5a3f0f80469e4e5","urls":["bzz-raw://caef23b0d90bba70804b57447a46083e0085b4758ca77febd2a0b7f72243243e","dweb:/ipfs/QmUwHbTjLpPYQN7xmugPT24uUokCEDfFXRK3sL9pvfd5x9"],"license":"MIT"},"lib/forge-std/src/safeconsole.sol":{"keccak256":"0x60cc2f1eb24e38fc92e067c622d6eeebfea4173c9e6517f16d440fbc8f0257fb","urls":["bzz-raw://b7b73fff39ec51e2f181962e5ea1306d8a2e953c0a9116849d086b5432227ca1","dweb:/ipfs/QmRrScdwdioNyyG7pPwsiQE1k5iJvuhYgt4MLY6xGu8uKh"],"license":"MIT"}},"version":1},"id":0}